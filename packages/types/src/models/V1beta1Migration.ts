/* tslint:disable */
/* eslint-disable */
/**
 * Forklift API
 * Migration toolkit for virtualization (Forklift) API definitions.
 *
 * The version of the OpenAPI document: 2.4.0
 * Contact: kubev2v-dev@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1beta1MigrationSpec } from './V1beta1MigrationSpec';
import {
    V1beta1MigrationSpecFromJSON,
    V1beta1MigrationSpecFromJSONTyped,
    V1beta1MigrationSpecToJSON,
} from './V1beta1MigrationSpec';
import type { V1beta1MigrationStatus } from './V1beta1MigrationStatus';
import {
    V1beta1MigrationStatusFromJSON,
    V1beta1MigrationStatusFromJSONTyped,
    V1beta1MigrationStatusToJSON,
} from './V1beta1MigrationStatus';

/**
 * 
 * @export
 * @interface V1beta1Migration
 */
export interface V1beta1Migration {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {any}
     * @memberof V1beta1Migration
     */
    apiVersion?: any | null;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {any}
     * @memberof V1beta1Migration
     */
    kind?: any | null;
    /**
     * 
     * @type {any}
     * @memberof V1beta1Migration
     */
    metadata?: any | null;
    /**
     * 
     * @type {V1beta1MigrationSpec}
     * @memberof V1beta1Migration
     */
    spec?: V1beta1MigrationSpec;
    /**
     * 
     * @type {V1beta1MigrationStatus}
     * @memberof V1beta1Migration
     */
    status?: V1beta1MigrationStatus;
}

/**
 * Check if a given object implements the V1beta1Migration interface.
 */
export function instanceOfV1beta1Migration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1beta1MigrationFromJSON(json: any): V1beta1Migration {
    return V1beta1MigrationFromJSONTyped(json, false);
}

export function V1beta1MigrationFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1Migration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'spec': !exists(json, 'spec') ? undefined : V1beta1MigrationSpecFromJSON(json['spec']),
        'status': !exists(json, 'status') ? undefined : V1beta1MigrationStatusFromJSON(json['status']),
    };
}

export function V1beta1MigrationToJSON(value?: V1beta1Migration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'kind': value.kind,
        'metadata': value.metadata,
        'spec': V1beta1MigrationSpecToJSON(value.spec),
        'status': V1beta1MigrationStatusToJSON(value.status),
    };
}

