/**
 * Forklift API
 * Migration toolkit for virtualization (Forklift) API definitions.
 *
 * The version of the OpenAPI document: 2.4.0
 * Contact: kubev2v-dev@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 * ForkliftController is the Schema for the forkliftcontrollers API
 * @export
 * @interface V1beta1ForkliftController
 */
export interface V1beta1ForkliftController {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   * @type {any}
   * @memberof V1beta1ForkliftController
   */
  apiVersion?: any | null;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @type {any}
   * @memberof V1beta1ForkliftController
   */
  kind?: any | null;
  /**
   *
   * @type {any}
   * @memberof V1beta1ForkliftController
   */
  metadata?: any | null;
  /**
   * Spec defines the desired state of ForkliftController
   * @type {any}
   * @memberof V1beta1ForkliftController
   */
  spec?: any | null;
  /**
   * Status defines the observed state of ForkliftController
   * @type {any}
   * @memberof V1beta1ForkliftController
   */
  status?: any | null;
}

/**
 * Check if a given object implements the V1beta1ForkliftController interface.
 */
export function instanceOfV1beta1ForkliftController(value: object): boolean {
  const isInstance = true;

  return isInstance;
}

export function V1beta1ForkliftControllerFromJSON(json: any): V1beta1ForkliftController {
  return V1beta1ForkliftControllerFromJSONTyped(json, false);
}

export function V1beta1ForkliftControllerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): V1beta1ForkliftController {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    apiVersion: !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
    kind: !exists(json, 'kind') ? undefined : json['kind'],
    metadata: !exists(json, 'metadata') ? undefined : json['metadata'],
    spec: !exists(json, 'spec') ? undefined : json['spec'],
    status: !exists(json, 'status') ? undefined : json['status'],
  };
}

export function V1beta1ForkliftControllerToJSON(value?: V1beta1ForkliftController | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    apiVersion: value.apiVersion,
    kind: value.kind,
    metadata: value.metadata,
    spec: value.spec,
    status: value.status,
  };
}
